import java.io.*;
import java.util.*;

public class CodeForces {
    static final int MOD = (int) 1e9 + 7;
    static final int INF = (int) 1e9;
    static final long LINF = (long) 1e18;

    public static void main(String[] args) throws IOException {
        FastIO io = new FastIO();
        int t = 1;
        t = io.nextInt(); 
        while (t-- > 0) {
            solve(io);
        }
        io.close(); 
    }

    static void solve(FastIO io) throws IOException {
        // int n = io.nextInt();
        // int k = io.nextInt();
        // String s = io.next(); 
        // int[] a = io.readIntArray(n);
    }

    // --------------- Fast I/O Class ----------------
    static class FastIO {
        private final BufferedReader br;
        private final PrintWriter pw;
        private StringTokenizer st;

        public FastIO() {
            br = new BufferedReader(new InputStreamReader(System.in));
            pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
            st = new StringTokenizer(""); 
        }

        public String next() throws IOException {
            while (!st.hasMoreTokens()) {
                String line = br.readLine();
                if (line == null)
                    return null;
                st = new StringTokenizer(line);
            }
            return st.nextToken();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public String nextLine() throws IOException {
            st = new StringTokenizer(""); 
            return br.readLine();
        }

        public int[] readIntArray(int n) throws IOException {
            int[] arr = new int[n];
            for (int i = 0; i < n; i++)
                arr[i] = nextInt();
            return arr;
        }

        public long[] readLongArray(int n) throws IOException {
            long[] arr = new long[n];
            for (int i = 0; i < n; i++) arr[i] = nextLong();
            return arr;
        }

        public char[] readCharArray() throws IOException {
            return next().toCharArray();
        }

        public void print(Object o) {
            pw.print(o);
        }

        public void println(Object o) {
            pw.println(o);
        }

        public void println() {
            pw.println();
        }

        public void close() {
            pw.flush();
            pw.close();
        }
    }

}
